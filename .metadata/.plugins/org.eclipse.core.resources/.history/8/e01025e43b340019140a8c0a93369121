package com.bridgelabz.fundoonotes.service;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoonotes.Utility.TokenGenerator;
import com.bridgelabz.fundoonotes.dao.LabelRepository;
import com.bridgelabz.fundoonotes.model.Label;

@Service
public class LabelServiceImpl implements LabelService {
	

	    @Autowired
	    private LabelRepository labelRepository;

	    @Autowired
	    private TokenGenerator tokenGenerator;
	   
	    @Autowired
	    private NoteService noteService;

	    public Label createLabel(String token,Label label, HttpServletRequest request){
	        int userId=tokenGenerator.authenticateToken(token);
	        if(userId>0) {
	            label.setUserId(userId);
	            Label sevedLabel=labelRepository.save(label);
	            return sevedLabel;
	        }
	        return null;
	    }

	    public Label editLabel(String token,Label label, HttpServletRequest request)
	    {
	        int userId=tokenGenerator.authenticateToken(token);
	        Label aliveLabel=labelRepository.findByUserId(userId);
	        if(aliveLabel!=null) {
	            aliveLabel.setLabelName(label.getLabelName());
	            return labelRepository.save(aliveLabel);
	        }
	        return aliveLabel;
	    }

	    public List<Label> retrieveLabel(String token, HttpServletRequest request) {
	        int userId=tokenGenerator.authenticateToken(token);
	        List<Label> labels = labelRepository.findAllByUserId(userId);
	        if (!labels.isEmpty())
	            return labels;
	        else
	            return null;
	    }
	    @Transactional
	    public boolean deleteLabel(String token, HttpServletRequest request) {
	        int userId=tokenGenerator.authenticateToken(token);
	        Label aliveLabels=labelRepository.findByUserId(userId);
	        if(aliveLabels!=null) {
	            labelRepository.deleteAllByuserId(userId);
	            return true;
	        }
	        else
	            return false;
	    }}

